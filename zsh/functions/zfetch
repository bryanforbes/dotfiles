# This code was originally from
# https://github.com/ninrod/dotfiles/boot/functions.zsh

git_clone_error_msg() {
  echo -e "  ${Red}[ERROR]${Rst} git clone errored: ${Red}${1}${Rst}. ${Yel}aborting...${Rst}"
}

typeset -Ag plugins

# Simplest dependency fetcher known to mankind
if [[ $1 == "update" ]]; then
  for name in ${(@k)plugins}; do
    local cwd=$(pwd)
    local dest=$plugins[$name]
    cd $dest
    echo -e "Updating ${Yel}${name}${Rst}..."
    git pull --quiet --recurse-submodules
    cd $cwd
  done
elif [[ $1 == "ls" ]]; then
  for name in ${(@k)plugins}; do
    echo -e "${name}: ${Yel}$plugins[$name]${Rst}"
  done
else
  # where the repo is going
  local dest="$1"
  # the short name of the repo (org/repo)
  local name="$2"

  # if the dest dir ends with /, append the name to it to get the real dest dir
  if [[ $dest == */ ]]; then
    dest=$dest$name
  else
    dest=$dest/$name
  fi

  local cwd=$(pwd)
  plugins[$name]=$dest

  if [[ ! -d $dest ]]; then
    local url=https://github.com/$name
    local ref=$3
    echo -e "Missing plugin ${Yel}${name}${Rst}"
    echo -e "  Cloning from ${Blu}${url}${Rst}..."
    if [[ -n $ref ]]; then
      git clone --quiet $url $dest
      if [[ $? != 0 ]]; then
        git_clone_error_msg $?
        cd $cwd
        return $?
      fi

      git checkout --quiet $ref
      echo -e "  Checked out branch ${ref}"
    else
      git clone --quiet --depth 1 $url $dest
      if [[ $? != 0 ]]; then
        git_clone_error_msg $?
        cd $cwd
        return $?
      fi
      echo -e "  Checked out master"
    fi
  fi
  cd $cwd
fi
