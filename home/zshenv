#
# Defines environment variables before .zshrc is sourced
#
# This file should be kept light and fast. Anything that's slow or involves
# user interaction should go in zshrc.

source $HOME/.dotfiles/zsh/common.zsh

# Language
# ----------------------------------------------------------------------------
[[ -z "$LANG" ]] && eval "$(locale)"
[[ -z "$LANG" ]] && export LANG=en_US.UTF-8
[[ -z "$LC_ALL" ]] && export LC_ALL=$LANG

# Cache and temp files
# ----------------------------------------------------------------------------

[[ -d "$CACHEDIR" ]] || mkdir -p "$CACHEDIR"
[[ -d "$CONFIGDIR" ]] || mkdir -p "$CONFIGDIR"
[[ -d "$DATADIR" ]] || mkdir -p "$DATADIR"
[[ -d "$ZCACHEDIR" ]] || mkdir -p "$ZCACHEDIR"
[[ -d "$ZDATADIR" ]] || mkdir -p "$ZDATADIR"
[[ -d "$ZPLUGDIR" ]] || mkdir -p "$ZPLUGDIR"
[[ -d "$ZCOMPDIR" ]] || mkdir -p "$ZCOMPDIR"
[[ -d "$ZFUNCDIR" ]] || mkdir -p "$ZFUNCDIR"

if [[ -d "$TMPDIR" ]]; then
    export TMPPREFIX="${TMPDIR%/}/zsh"
    [[ -d "$TMPPREFIX" ]] || mkdir -p "$TMPPREFIX"
fi

# General paths
# ----------------------------------------------------------------------------
typeset -gU path mailpath

# Path
# --------------------------------------------------------------------------
path=(
    $HOMEBREW_BASE/bin
    $HOMEBREW_BASE/sbin
    $path
)

# Terminal
# --------------------------------------------------------------------------
if [[ -z $TERM_PROGRAM ]]; then
    if [[ -n $GNOME_TERMINAL_SCREEN ]]; then
        export TERM_PROGRAM=gnome-terminal
    elif [[ -n $KITTY_LISTEN_ON ]]; then
        export TERM_PROGRAM=kitty
    fi
fi

# Tmux
# --------------------------------------------------------------------------
export TMUX_PLUGIN_MANAGER_PATH="$CACHEDIR/tmux/tmux-plugins/"

manpath=(
    $HOMEBREW_BASE/share/man
    $manpath
)

# coreutils and gnu-sed
if is-darwin; then
    # path and manpath for homebrew
    path=(
        $HOMEBREW_BASE/opt/{coreutils,gnu-sed}/libexec/gnubin
        $path
    )
    manpath=(
        $HOMEBREW_BASE/opt/{coreutils,gnu-sed}/libexec/gnuman
        $manpath
    )
fi

# Python
if [[ -d $HOMEBREW_BASE/opt/python@${HOMEBREW_PYTHON_VERSION} ]]; then
    # Put python before $HOMEBREW_BASE/bin since some of its programs, like pip,
    # will eventually be overridden with things in $HOMEBREW_BASE/bin
    # https://discourse.brew.sh/t/pip-install-upgrade-pip-breaks-pip-when-installed-with-homebrew/5338
    path[$path[(ie)$HOMEBREW_BASE/bin]]=(
        $HOMEBREW_BASE/opt/python@${HOMEBREW_PYTHON_VERSION}/libexec/bin
        $HOMEBREW_BASE/opt/python@${HOMEBREW_PYTHON_VERSION}/bin
        $HOMEBREW_BASE/bin
    )
fi

path=(
    "$(python3 -c 'import site; print(site.USER_BASE, end="")')/bin"
    $path
)

# Rust
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"

if [[ -d $HOMEBREW_BASE/opt/rustup ]]; then
    path=(
        $HOMEBREW_BASE/opt/rustup/bin
        $path
    )
fi

path=(
    $CARGO_HOME/bin
    $path
)

# PostgreSQL
if [[ -d $HOMEBREW_BASE/opt/postgresql@15 ]]; then
    path=(
        $HOMEBREW_BASE/opt/postgresql@15/bin
        $path
    )
    manpath=(
        $HOMEBREW_BASE/opt/postgresql@15/share/man
        $manpath
    )
fi

# VMware
if [[ -e /Applications/VMware\ Fusion.app/Contents/Library ]]; then
    path=(
        $path
        /Applications/VMware\ Fusion.app/Contents/Library
    )
fi

path=(
    $HOME/.local/bin
    $HOME/bin
    $DOTFILES/bin
    $path
)

# Homebrew
# ----------------------------------------------------------------------------
# Use Bootsnap to speed up repeated brew calls
export HOMEBREW_BOOTSNAP=1

# Disable global zprofile, which messes with the path
unsetopt GLOBAL_RCS

# Treat these characters as part of a word.
WORDCHARS='*?_-.[]~&;!#$%^(){}<>'
